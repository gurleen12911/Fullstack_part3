{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\part1\\\\src\\\\App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n_c = Header;\nconst Part = _ref2 => {\n  let {\n    part\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.name, \" \", part.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Part;\nconst Content = _ref3 => {\n  let {\n    parts\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts.map((part, index) => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Content;\nconst Total = _ref4 => {\n  let {\n    parts\n  } = _ref4;\n  const totalExercises = parts.reduce((sum, part) => sum + part.exercises, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", totalExercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_c4 = Total;\nconst App = () => {\n  const course = 'Half Stack application development';\n  const parts = [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  }, {\n    name: 'Using props to pass data',\n    exercises: 7\n  }, {\n    name: 'State of a component',\n    exercises: 14\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","_ref","course","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Part","_ref2","part","name","exercises","_c2","Content","_ref3","parts","map","index","_c3","Total","_ref4","totalExercises","reduce","sum","_c4","App","_c5","$RefreshReg$"],"sources":["C:/React Project/part1/src/App.js"],"sourcesContent":["import React from 'react'\n\nconst Header = ({ course }) => {\n  return <h1>{course}</h1>\n}\n\nconst Part = ({ part }) => {\n  return (\n    <p>\n      {part.name} {part.exercises}\n    </p>\n  )\n}\n\nconst Content = ({ parts }) => {\n  return (\n    <div>\n      {parts.map((part, index) => (\n        <Part key={index} part={part} />\n      ))}\n    </div>\n  )\n}\n\nconst Total = ({ parts }) => {\n  const totalExercises = parts.reduce((sum, part) => sum + part.exercises, 0)\n\n  return <p>Number of exercises {totalExercises}</p>\n}\n\nconst App = () => {\n  const course = 'Half Stack application development'\n  const parts = [\n    {\n      name: 'Fundamentals of React',\n      exercises: 10,\n    },\n    {\n      name: 'Using props to pass data',\n      exercises: 7,\n    },\n    {\n      name: 'State of a component',\n      exercises: 14,\n    },\n  ]\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content parts={parts} />\n      <Total parts={parts} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}